{
  "permissions": {
    "allow": [
      "Bash(g++:*)",
      "Bash(./mini_so)",
      "Bash(mkdir:*)",
      "Bash(./working_example)",
      "Bash(./simple_example)",
      "Bash(cmake:*)",
      "Bash(make:*)",
      "Bash(./build/test_message_queue)",
      "Bash(./build/advanced_example)",
      "Bash(./build/test_agent)",
      "Bash(ls:*)",
      "Bash(mv:*)",
      "Bash(rmdir:*)",
      "Bash(find:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(timeout:*)",
      "Bash(./build/freertos_simple_example)",
      "Bash(cp:*)",
      "Bash(pio run:*)",
      "mcp__ide__getDiagnostics",
      "Bash(./build/test_minimal)",
      "Bash(python3 -m platformio run -e native)",
      "Bash(./test_minimal)",
      "Bash(./test_message_queue)",
      "Bash(pio lib search:*)",
      "Bash(pip3 install:*)",
      "Bash(python3 -m pip install:*)",
      "Bash(pip install:*)",
      "Bash(rm:*)",
      "Bash(./test_agent)",
      "Bash(git clone:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(/home/blessp/.platformio/penv/bin/pio run -e stm32f103rc)",
      "Bash(echo:*)",
      "Bash(pio test:*)",
      "Bash(./simple_test)",
      "Bash(./simple_test_phase1)",
      "Bash(./test/test_validation)",
      "Bash(./test/test_watchdog)",
      "Bash(./examples/simple_example:*)",
      "Bash(./test_phase1)",
      "Bash(./test_simple_phase1)",
      "Bash(./test_debug)",
      "Bash(gdb:*)",
      "Bash(./phase2_test)",
      "Bash(./phase3_final_test)",
      "Bash(nm:*)",
      "Bash(printf:*)",
      "Bash(./examples/phase3_final_example)",
      "Bash(./examples/phase2_simple_example)",
      "Bash(ar t:*)",
      "Bash(python3 -m platformio run -e test)",
      "Bash(apt list:*)",
      "Bash(./test_main_host)",
      "Bash(/tmp:*)",
      "Bash(/home/blessp/.nvm/versions/node/v22.16.0/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/x64-linux/rg -n \"Environment::instance\\(\\)|System::instance\\(\\)\" /home/blessp/my_code/Mini_SObjectizer/src/mini_sobjectizer_final.cpp)",
      "Bash(./test_modular)",
      "Bash(./test_original)",
      "Bash(./test_integration)",
      "Bash(./test_memory)",
      "Bash(./test_errors)",
      "Bash(./test_performance)",
      "Bash(./main_test)",
      "Bash(./test_access_fix)",
      "Bash(./test_modular_access)",
      "Bash(ctest:*)",
      "Bash(./test_runner)",
      "Bash(./simple_modular_test)",
      "Bash(./quick_test)",
      "Bash(./test_memory_safety)",
      "Bash(./test_core_functionality)",
      "Bash(valgrind:*)",
      "Bash(./test_simple_safety)",
      "Bash(./test_step_by_step:*)",
      "Bash(./test_core_safe)",
      "Bash(./test_lockfree_safety)",
      "Bash(./test_lockfree_performance)",
      "Bash(./test_emergency_failsafe)",
      "Bash(./test_collision_fix)",
      "Bash(./test_core_after_fix)",
      "Bash(./test_core_asan)",
      "Bash(./test_core_normal)",
      "Bash(./test_basic)",
      "Bash(./test_step)",
      "Bash(./test_collision_final)",
      "Bash(git stash:*)",
      "Bash(./test_siof_runner)",
      "Bash(./test_overflow_runner)",
      "Bash(./test_watchdog_runner)",
      "Bash(./test_error_overflow_runner)",
      "Bash(./test_circular_runner)",
      "Bash(for:*)",
      "Bash(do echo \"Updating $file\")",
      "Bash(sed:*)",
      "Bash(done)",
      "Bash(./test_simple_iot)",
      "Bash(./macro_demo)",
      "Bash(./test_core)",
      "Bash(./test_tutorial)",
      "Bash(./test_advanced_macros)",
      "Bash(./01_beginner_tutorial)",
      "Bash(./simple_iot_example)",
      "Bash(./test_main)",
      "Bash(./stm32_simulation)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(./examples/01_beginner_tutorial)",
      "Bash(git init:*)"
    ],
    "deny": []
  }
}